package network;

import java.awt.Font;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;

import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

import swing.BaseFrm;

public class _03_TcpIpMultiChatClient extends BaseFrm{
    private Socket socket;
    private JTextArea ta;
    private JScrollPane scp;
    private JTextField tf;
    private String nickName;
    private DataOutputStream out;
    
    
    protected _03_TcpIpMultiChatClient() {
        super("Chat v1.0", 400, 500);
        String serverIp = JOptionPane.showInputDialog("Input Server IP", "192.168.0.187");
        nickName = JOptionPane.showInputDialog("Nickname");
        try {
            socket = new Socket(serverIp, 7777);
            out = new DataOutputStream(socket.getOutputStream());
            out.writeUTF(nickName);
        }catch (Exception e) {
            e.printStackTrace();
        }
        Receivers r = new Receivers(socket);
        r.start();
    }

    public static void main(String[] args) {
        new _03_TcpIpMultiChatClient();
    }

    @Override
    public void init() {
        ta = new JTextArea();
        scp = new JScrollPane(ta);
        tf = new JTextField();
        ta.setFont(new Font("맑은 고딕", Font.PLAIN, 16));
        tf.setFont(new Font("맑은 고딕", Font.PLAIN, 20));
        tf.addActionListener(e -> {
            try {
                out.writeUTF(String.format("[%s] %s", nickName, tf.getText()));
            } catch (IOException e1) {
                e1.printStackTrace();
            }
        });
    }
    
    @Override
    public void arrange() {
        add(scp, "Center");
        add(tf, "South");
        ta.setText("");
    }

}
class Receivers extends Thread {
    DataInputStream in;

    public Receivers(Socket socket) {
        try {
            this.in = new DataInputStream(socket.getInputStream());
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void run() {
        while (in != null) {
            try {
                System.out.println(in.readUTF()+"/n");
                // textArea 작업은 시험
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
    
}